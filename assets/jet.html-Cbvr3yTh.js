import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as a,c as h,a as e,d as t,b as o,e as l}from"./app-qKmLr34n.js";const c={},i=l('<h1 id="鉴权" tabindex="-1"><a class="header-anchor" href="#鉴权"><span>鉴权</span></a></h1><h2 id="什么是鉴权" tabindex="-1"><a class="header-anchor" href="#什么是鉴权"><span>什么是鉴权？</span></a></h2><ol><li>鉴权（authentication）：是指验证用户是否拥有访问系统的权利。</li></ol><h2 id="为什么要鉴权" tabindex="-1"><a class="header-anchor" href="#为什么要鉴权"><span>为什么要鉴权？</span></a></h2><ol><li>用户鉴权，网络对用户进行鉴权，<strong>防止非法用户占用网络资源</strong>。</li><li>网络鉴权，用户对网络进行鉴权，<strong>防止用户接入了非法的网络，被骗取关键信息</strong>。</li></ol><h2 id="常用的鉴权方式" tabindex="-1"><a class="header-anchor" href="#常用的鉴权方式"><span>常用的鉴权方式</span></a></h2><ol><li>HTTP Basic Authentication</li><li>sessio</li><li>n-cookie</li><li>Token 验证</li><li>OAuth(开放授权)</li></ol><h2 id="token" tabindex="-1"><a class="header-anchor" href="#token"><span>Token</span></a></h2><p>Token在计算机身份认证中是令牌（临时）的意思，简单来说就是<strong>访问资源的凭据</strong>。</p><h2 id="refresh-token" tabindex="-1"><a class="header-anchor" href="#refresh-token"><span>Refresh Token</span></a></h2><p>Refresh Token是在OAuth2协议中用来刷新Access Token的，它是通过客户端持有的Refresh Token来获取新的Access Token。Refresh Token具有一定的有效期，在有效期内可以多次使用。当Access Token失效或者过期时，客户端可以使用Refresh Token来请求新的Access Token，从而不用重新请求用户授权。</p><p>OAuth2协议中的OAuth2是一段长期有效的Token，用于刷新Access Token。认证服务器在发放Access Token时，同时也发放一个Refresh Token。当请求中的Access Token过期时，客户端携带Refresh Token向认证服务器发起请求，认证服务器会根据该Refresh Token发放新的Access Token。</p><h2 id="jwt-json-web-token" tabindex="-1"><a class="header-anchor" href="#jwt-json-web-token"><span>JWT（Json Web Token）</span></a></h2><p>详细看下面的参考文章，简单来说就是你登录之后，服务器会返回一个token给你作为访问凭证，一般把这个token放到HTTP 请求的头信息<code>Authorization</code>字段里面</p><h1 id="sso-single-sign-on-单点登录" tabindex="-1"><a class="header-anchor" href="#sso-single-sign-on-单点登录"><span>SSO(Single Sign On 单点登录)</span></a></h1><h2 id="什么是单点登录" tabindex="-1"><a class="header-anchor" href="#什么是单点登录"><span>什么是单点登录？</span></a></h2><p>1.单点登录（Single Sign On）：简称为 SSO，是比较流行的<em>企业业务整合的解决方案</em>之一。SSO的定义是<strong>在企业内部多个应用系统中（如考勤系统，人事系统，财务系统等）场景下，用户只需要登录一次就可以访问所有相互信任的应用系统，同样只需注销一次就能在多个系统退出登录</strong>。 一次登录，全部登录，一次退出，全部退出。</p><h2 id="为什么要单点登录" tabindex="-1"><a class="header-anchor" href="#为什么要单点登录"><span>为什么要单点登录？</span></a></h2><p>以往用户需要分别对接各个应用系统进行登录/注销，现在用户只需要单独对接认证系统进行登录/注销。登录状态在各个应用系统间共享，体现了把简单留给用户，把复杂留给后台系统的设计理念。极大节省了用户时间，提高了用户体验。</p><h3 id="单点登录优点" tabindex="-1"><a class="header-anchor" href="#单点登录优点"><span>单点登录优点</span></a></h3><p><strong>1）提高用户的效率。</strong> 用户不再被多次登录困扰，也不需要记住多个 ID 和密码。另外，用户忘记密码并求助于支持人员的情况也会减少。</p><p><strong>2）提高开发人员的效率。</strong> SSO 为开发人员提供了一个通用的<strong>身份验证</strong>框架。实际上，如果 SSO 机制是独立的，那么开发人员就完全不需要为身份验证操心。他们可以假设，只要对应用程序的请求附带一个用户名，身份验证就已经完成了。</p><p><strong>3）简化管理。</strong> 如果应用程序加入了单点登录协议，管理用户帐号的负担就会减轻。简化的程度取决于应用程序，因为 SSO 只处理身份验证。所以，应用程序可能仍然需要设置用户的属性（比如访问特权 **</p><h3 id="单点登录缺点" tabindex="-1"><a class="header-anchor" href="#单点登录缺点"><span>单点登录缺点</span></a></h3><p><strong>1）不利于重构</strong> 因为涉及到的系统很多，要重构必须要兼容所有的系统，可能很耗时。</p><p><strong>2） 无人看守桌面</strong> 因为只需要登录一次，所有的授权的应用系统都可以访问，可能导致一些很重要的信息泄露</p><h1 id="问" tabindex="-1"><a class="header-anchor" href="#问"><span>问：</span></a></h1><h2 id="_1-token有什么用" tabindex="-1"><a class="header-anchor" href="#_1-token有什么用"><span>1.token有什么用？</span></a></h2><p>主要的作用就是为了安全，用户登陆时，服务器会随机生成一个有时效性的token,用户的每一次请求都需要携带上token，证明其请求的合法性，服务器会验证token，只有通过验证才会返回请求结果。</p><h2 id="_2-access-token与refesh-token区别" tabindex="-1"><a class="header-anchor" href="#_2-access-token与refesh-token区别"><span>2.Access token与refesh token区别？</span></a></h2><table><thead><tr><th></th><th>token</th><th>refesh token</th></tr></thead><tbody><tr><td>含义</td><td>访问令牌, 它是一个用来访问受保护资源的凭证</td><td>刷新令牌, 它是一个用来获取access token的凭证</td></tr><tr><td>时效</td><td>时效短</td><td>时效长</td></tr><tr><td>过期后</td><td>access_token 过期后, 可以使用 refresh_token 重新获取</td><td>refresh_token 过期后就只能重新授权了, 也没有 refresh_refresh_token</td></tr></tbody></table><h2 id="_3-如果-refesh-token-也过期了怎么办" tabindex="-1"><a class="header-anchor" href="#_3-如果-refesh-token-也过期了怎么办"><span>3. 如果 refesh token 也过期了怎么办？</span></a></h2><p>这就需要用户重新登陆授权了</p><h2 id="_4-为什么要区分-refresh-token-和-access-token" tabindex="-1"><a class="header-anchor" href="#_4-为什么要区分-refresh-token-和-access-token"><span>4. 为什么要区分 refresh token 和 access token ？</span></a></h2><p>这样的处理是为了职责的分离：refresh token 负责身份认证，access token 负责请求资源。虽然 refresh token 和 access token 都由 IdP 发出，但是 access token 还要和 SP 进行数据交换，如果公用的话这样就会有身份泄露的可能。并且 IdP 和 SP 可能是完全不同的服务提供的。</p><p>IdP 是 Identity Provider 的缩写，指认证中心，在认证过程中 IdP 持有用户信息，并与用户建立会话。（负责身份验证和凭据管理的中心身份服务）</p><p>SP 是 Service Provider 的缩写，指服务提供者，当用户访问 SP 提供的服务时，如果 SP 无法识别用户，会请求 IdP 对用户进行认证。（提供需要身份验证的应用程序或系统）</p><h1 id="_5-那么为什么不只是-access-token-并将其过期时间设置得更长呢-如果合并成一个-token-然后把过期时间调整的更长-并且每次失效之后用户重新登陆授权就好了" tabindex="-1"><a class="header-anchor" href="#_5-那么为什么不只是-access-token-并将其过期时间设置得更长呢-如果合并成一个-token-然后把过期时间调整的更长-并且每次失效之后用户重新登陆授权就好了"><span>5.那么为什么不只是 access_token 并将其过期时间设置得更长呢？/如果合并成一个 token 然后把过期时间调整的更长，并且每次失效之后用户重新登陆授权就好了？</span></a></h1><p>Oauth2 规范不推荐使用不可过期的令牌。标记词本身意味着一个可过期的东西。如果它没有过期，我们可以使用密码。 通常当令牌过期时，会强制登录。但是有一些要求，用户不想每 3600 毫秒再次登录和登录。因此，<strong>refresh_token</strong> 有助于不打扰我们的用户并<strong>无需人工登录即可获得新的 access_token</strong>。</p>',39),d={href:"https://mp.weixin.qq.com/s?__biz=MjM5MTQ0MTQ2Mg==&mid=2650877508&idx=1&sn=4d365272d097e405552fa422d6a9f715&chksm=bd40f91d8a37700bd598e6f176b8013fdbf4240608fd703e148865c496778218c8b6b8130efe&scene=27",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/ningmengban/article/details/117364407",target:"_blank",rel:"noopener noreferrer"},p={href:"https://zhuanlan.zhihu.com/p/38942172",target:"_blank",rel:"noopener noreferrer"},f={href:"https://www.jiangweishan.com/article/js202001013a1.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.likecs.com/ask-574792.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://blog.csdn.net/m0_65812066/article/details/128577183",target:"_blank",rel:"noopener noreferrer"};function T(u,b){const n=r("ExternalLinkIcon");return a(),h("div",null,[i,e("p",null,[e("a",d,[t("一分钟了解单点登录"),o(n)])]),e("p",null,[e("a",k,[t("10 分钟带你了解鉴权那些事"),o(n)])]),e("p",null,[e("a",p,[t("不要用JWT替代session管理（上）：全面了解Token,JWT,OAuth,SAML,SSO"),o(n)])]),e("p",null,[e("a",f,[t("用户登录后过期自动刷新token操作"),o(n)])]),e("p",null,[e("a",g,[t("如何以及为什么使用 refresh_token 处理 jwt 令牌过期，还有另一种选择吗？ [关闭]"),o(n)])]),e("p",null,[e("a",_,[t("关于 Token 过期问题的两种解决方案"),o(n)])])])}const x=s(c,[["render",T],["__file","jet.html.vue"]]),v=JSON.parse('{"path":"/browser/jet.html","title":"5. 鉴权，单点登陆，JWT和Token等","lang":"en-US","frontmatter":{"title":"5. 鉴权，单点登陆，JWT和Token等","icon":"object-group","order":5,"category":["Guide"],"tag":["鉴权，单点登陆，JWT和Token等"],"description":"鉴权 什么是鉴权？ 鉴权（authentication）：是指验证用户是否拥有访问系统的权利。 为什么要鉴权？ 用户鉴权，网络对用户进行鉴权，防止非法用户占用网络资源。 网络鉴权，用户对网络进行鉴权，防止用户接入了非法的网络，被骗取关键信息。 常用的鉴权方式 HTTP Basic Authentication sessio n-cookie Token...","head":[["meta",{"property":"og:url","content":"https://your.domain/browser/jet.html"}],["meta",{"property":"og:site_name","content":"Docs Demo"}],["meta",{"property":"og:title","content":"5. 鉴权，单点登陆，JWT和Token等"}],["meta",{"property":"og:description","content":"鉴权 什么是鉴权？ 鉴权（authentication）：是指验证用户是否拥有访问系统的权利。 为什么要鉴权？ 用户鉴权，网络对用户进行鉴权，防止非法用户占用网络资源。 网络鉴权，用户对网络进行鉴权，防止用户接入了非法的网络，被骗取关键信息。 常用的鉴权方式 HTTP Basic Authentication sessio n-cookie Token..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"ChorKiu"}],["meta",{"property":"article:tag","content":"鉴权，单点登陆，JWT和Token等"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. 鉴权，单点登陆，JWT和Token等\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ChorKiu\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是鉴权？","slug":"什么是鉴权","link":"#什么是鉴权","children":[]},{"level":2,"title":"为什么要鉴权？","slug":"为什么要鉴权","link":"#为什么要鉴权","children":[]},{"level":2,"title":"常用的鉴权方式","slug":"常用的鉴权方式","link":"#常用的鉴权方式","children":[]},{"level":2,"title":"Token","slug":"token","link":"#token","children":[]},{"level":2,"title":"Refresh Token","slug":"refresh-token","link":"#refresh-token","children":[]},{"level":2,"title":"JWT（Json Web Token）","slug":"jwt-json-web-token","link":"#jwt-json-web-token","children":[]},{"level":2,"title":"什么是单点登录？","slug":"什么是单点登录","link":"#什么是单点登录","children":[]},{"level":2,"title":"为什么要单点登录？","slug":"为什么要单点登录","link":"#为什么要单点登录","children":[{"level":3,"title":"单点登录优点","slug":"单点登录优点","link":"#单点登录优点","children":[]},{"level":3,"title":"单点登录缺点","slug":"单点登录缺点","link":"#单点登录缺点","children":[]}]},{"level":2,"title":"1.token有什么用？","slug":"_1-token有什么用","link":"#_1-token有什么用","children":[]},{"level":2,"title":"2.Access token与refesh token区别？","slug":"_2-access-token与refesh-token区别","link":"#_2-access-token与refesh-token区别","children":[]},{"level":2,"title":"3. 如果 refesh token 也过期了怎么办？","slug":"_3-如果-refesh-token-也过期了怎么办","link":"#_3-如果-refesh-token-也过期了怎么办","children":[]},{"level":2,"title":"4. 为什么要区分 refresh token 和 access token ？","slug":"_4-为什么要区分-refresh-token-和-access-token","link":"#_4-为什么要区分-refresh-token-和-access-token","children":[]}],"git":{},"readingTime":{"minutes":5.64,"words":1693},"filePathRelative":"browser/jet.md","autoDesc":true}');export{x as comp,v as data};
